var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __decorateClass = (decorators, target, key, kind) => {
  var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
  for (var i = decorators.length - 1, decorator; i >= 0; i--)
    if (decorator = decorators[i])
      result = (kind ? decorator(target, key, result) : decorator(result)) || result;
  if (kind && result) __defProp(target, key, result);
  return result;
};

// components/icon/icon.ts
import { LitElement, css, html } from "lit";
import { customElement, property } from "lit/decorators.js";
import { unsafeHTML } from "lit/directives/unsafe-html.js";

// components/icon/store.ts
var _cxGlobalIconsStore = {};
var addIcons = (...icons) => {
  icons.forEach((icon) => {
    _cxGlobalIconsStore[icon.name] = icon;
  });
};
var getIcon = (name) => {
  if (name && !_cxGlobalIconsStore[name]) {
    console.error(
      `The icon "${name}" was not found. Ensure that the icon name is correct and that it has been added to the global icon store by calling the \`addIcons\` function.
Check out the documentation for further details: https://designsystem.computas.com/?path=/docs/components-icon--overview, or ask for support in the Slack channel #designsystemet.`
    );
  }
  return _cxGlobalIconsStore[name ?? ""];
};

// components/icon/icon.ts
var Icon = class extends LitElement {
  constructor() {
    super(...arguments);
    this.name = null;
    this.size = void 0;
  }
  render() {
    return html`${unsafeHTML(getIcon(this.name)?.data ?? "")}`;
  }
};
Icon.styles = css`
    :host {
      --_icon-size: 1.5rem;

      display: inline-block;
      width: var(--_icon-size);
      height: var(--_icon-size);
			flex: none;
      line-height: 0;
    }

    :host([size='1']) { --_icon-size: 0.25rem; }
    :host([size='2']) { --_icon-size: 0.5rem; }
    :host([size='3']) { --_icon-size: 0.75rem; }
    :host([size='4']) { --_icon-size: 1rem; }
    :host([size='5']) { --_icon-size: 1.25rem; }
    :host([size='6']) { --_icon-size: 1.5rem; }
    :host([size='7']) { --_icon-size: 1.75rem; }
    :host([size='8']) { --_icon-size: 2rem; }
    :host([size='9']) { --_icon-size: 2.25rem; }
    :host([size='10']) { --_icon-size: 2.5rem; }
    :host([size='11']) { --_icon-size: 2.75rem; }
    :host([size='12']) { --_icon-size: 3rem; }
    :host([size='13']) { --_icon-size: 3.25rem; }
    :host([size='14']) { --_icon-size: 3.5rem; }
    :host([size='15']) { --_icon-size: 3.75rem; }
    :host([size='16']) { --_icon-size: 4rem; }
    :host([size='17']) { --_icon-size: 4.25rem; }
    :host([size='18']) { --_icon-size: 4.5rem; }
    :host([size='19']) { --_icon-size: 4.75rem; }
    :host([size='20']) { --_icon-size: 5rem; }

    svg {
      width: 100%;
      height: 100%;
    }
  `;
__decorateClass([
  property({ type: String, reflect: true })
], Icon.prototype, "name", 2);
__decorateClass([
  property({ type: String, reflect: true })
], Icon.prototype, "size", 2);
Icon = __decorateClass([
  customElement("cx-icon")
], Icon);
export {
  Icon,
  addIcons
};
//# sourceMappingURL=index.js.map
