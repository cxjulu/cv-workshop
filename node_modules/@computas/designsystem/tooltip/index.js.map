{
  "version": 3,
  "sources": ["../../components/tooltip/tooltip.ts"],
  "sourcesContent": ["import { LitElement, css, html } from 'lit';\nimport { customElement, query } from 'lit/decorators.js';\n\n@customElement('cx-tooltip')\nexport class Tooltip extends LitElement {\n  static styles = [\n    css`\n      .trigger {\n        anchor-name: --trigger;\n        display: inline-flex;\n      }\n\n      [popover] {\n        position-anchor: --trigger;\n        position-area: bottom center;\n        position-try: --top-center, --center-left, --center-right;\n        position: absolute;\n        margin: var(--cx-spacing-2) 0 0 0;\n        opacity: 0;\n\n        transition: all 200ms ease-in-out allow-discrete;\n\n        background-color: var(--cx-color-background-primary);\n        color: var(--cx-color-text-primary);\n        border-radius: var(--cx-radius-small);\n        border: 1px solid var(--cx-color-border-primary);\n        padding: var(--cx-spacing-4) var(--cx-spacing-6);\n        max-width: 400px;\n\n        //copied from typography cx-text-4 class\n        font-weight: 400;\n        font-size: 0.875rem;\n        line-height: 1.6;\n\n        &:popover-open {\n          transition-delay: 250ms;\n          opacity: 1;\n\n          @starting-style {\n            opacity: 0;\n          }\n        }\n      }\n\n      @position-try --top-center {\n        position-area: top center;\n        margin: 0 0 var(--cx-spacing-2) 0;\n      }\n\n      @position-try --center-left {\n        position-area: center left;\n        margin: 0 var(--cx-spacing-2) 0 0;\n      }\n\n      @position-try --center-right {\n        position-area: center right;\n        margin: 0 0 0 var(--cx-spacing-2);\n      }\n    `,\n  ];\n\n  @query('[popover]')\n  private popoverElement!: HTMLDivElement;\n\n  private isTouchDevice() {\n    return navigator.maxTouchPoints > 0;\n  }\n\n  private showTooltip() {\n    if (this.isTouchDevice()) {\n      return;\n    }\n\n    this.popoverElement.showPopover();\n  }\n  private hideTooltip() {\n    if (this.isTouchDevice()) {\n      return;\n    }\n    this.popoverElement.hidePopover();\n  }\n\n  render() {\n    return html`\n      <slot\n        class=\"trigger\"\n        name=\"trigger\"\n        @mouseenter=${this.showTooltip}\n        @focusin=${this.showTooltip}\n        @focusout=${this.hideTooltip}\n        @mouseleave=${this.hideTooltip}\n      ></slot>\n\n      <div role=\"tooltip\" popover>\n        <slot></slot>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'cx-tooltip': Tooltip;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;AAAA,SAAS,YAAY,KAAK,YAAY;AACtC,SAAS,eAAe,aAAa;AAG9B,IAAM,UAAN,cAAsB,WAAW;AAAA,EA4D9B,gBAAgB;AACtB,WAAO,UAAU,iBAAiB;AAAA,EACpC;AAAA,EAEQ,cAAc;AACpB,QAAI,KAAK,cAAc,GAAG;AACxB;AAAA,IACF;AAEA,SAAK,eAAe,YAAY;AAAA,EAClC;AAAA,EACQ,cAAc;AACpB,QAAI,KAAK,cAAc,GAAG;AACxB;AAAA,IACF;AACA,SAAK,eAAe,YAAY;AAAA,EAClC;AAAA,EAEA,SAAS;AACP,WAAO;AAAA;AAAA;AAAA;AAAA,sBAIW,KAAK,WAAW;AAAA,mBACnB,KAAK,WAAW;AAAA,oBACf,KAAK,WAAW;AAAA,sBACd,KAAK,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOpC;AACF;AA9Fa,QACJ,SAAS;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqDF;AAGQ;AAAA,EADP,MAAM,WAAW;AAAA,GAzDP,QA0DH;AA1DG,UAAN;AAAA,EADN,cAAc,YAAY;AAAA,GACd;",
  "names": []
}
